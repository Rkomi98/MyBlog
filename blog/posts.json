[
  {
    "slug": "docker-dentro-il-container",
    "updatedAt": "2025-10-31T12:12:16.874Z",
    "publishedAt": "2025-10-30T00:00:00.000Z",
    "readTime": 15,
    "icon": "üê≥",
    "category": "Docker",
    "categoryLabels": {
      "it": "Docker",
      "en": "Docker"
    },
    "languages": {
      "it": {
        "title": "Docker: Dentro il Container",
        "summary": "Deep dive in Docker Abstract Eccoci arrivati al secondo episodio della serie \"Docker per sviluppatori\". Dato che il primo articolo √® stato apprezzato, direi che possiamo andare deep questa volta analizzando i concetti chiave di Docker in modo accessibile a tu‚Ä¶",
        "source": "Docker_02.md",
        "output": "blog/it/docker-dentro-il-container/index.html",
        "updatedAt": "2025-10-31T12:12:16.874Z"
      },
      "en": {
        "title": "Docker Deep Dive: Inside the Container",
        "summary": "Inside a Container: Key Concepts Abstract Second episode of the ‚ÄúDocker for Developers‚Äù series. This narrative guide walks through Docker‚Äôs core ideas with productiongrade precision while staying approachable: the goal is to understand what Docker does concep‚Ä¶",
        "source": "Docker_02_en.md",
        "output": "blog/en/docker-dentro-il-container/index.html",
        "updatedAt": "2025-10-31T10:25:40.432Z"
      }
    }
  },
  {
    "slug": "vibe-coding-vs-traditional",
    "updatedAt": "2025-10-31T10:27:03.063Z",
    "publishedAt": "2025-10-29T00:00:00.000Z",
    "readTime": 15,
    "icon": "ü§ñ",
    "category": "Programming",
    "categoryLabels": {
      "it": "Programmazione",
      "en": "Programming"
    },
    "languages": {
      "it": {
        "title": "Vibe Coding vs Programmazione Tradizionale (2023-2025)",
        "summary": "Confronto tra vibe coding e programmazione tradizionale (2023‚Äì2025) Abstract Il vibe coding ‚Äì ossia la programmazione guidata interamente dall‚ÄôAI ‚Äì si √® diffuso tra il 2023 e il 2025 grazie a strumenti come GitHub Copilot, Cursor, Sourcegraph Cody, Tabnine, C‚Ä¶",
        "source": "articolo-vibe-coding-vs-trad-coding.md",
        "output": "blog/it/vibe-coding-vs-traditional/index.html",
        "updatedAt": "2025-10-30T21:21:22.914Z"
      },
      "en": {
        "title": "Vibe Coding vs Traditional Development (2023-2025)",
        "summary": "Vibe Coding vs Traditional Programming (2023‚Äì2025) Abstract ‚ÄúVibe coding‚Äù ‚Äî letting an AI pair programmer drive the entire implementation ‚Äî exploded between 2023 and 2025 thanks to tools such as GitHub Copilot, Cursor, Sourcegraph Cody, Tabnine, Codeium, and‚Ä¶",
        "source": "articolo-vibe-coding-vs-trad-coding_en.md",
        "output": "blog/en/vibe-coding-vs-traditional/index.html",
        "updatedAt": "2025-10-31T10:27:03.063Z"
      }
    }
  },
  {
    "slug": "kinetica-cache-optimization",
    "updatedAt": "2025-10-31T11:32:55.128Z",
    "publishedAt": "2025-10-25T00:00:00.000Z",
    "readTime": 10,
    "icon": "üíª",
    "category": "Data Engineering",
    "categoryLabels": {
      "it": "Data Engineering",
      "en": "Data Engineering"
    },
    "languages": {
      "it": {
        "title": "Ottimizzazione della Cache con Kinetica",
        "summary": "In parole semplici, Kinetica consente alle aziende di processare e analizzare enormi quantit√† di dati ‚Äúlive‚Äù in modo rapidissimo, sfruttando le GPU al posto delle sole CPU tradizionali . √à pensato per carichi OLAP (analisi) complessi, includendo analisi su da‚Ä¶",
        "source": "Arkemis_Kinetica.md",
        "output": "blog/it/kinetica-cache-optimization/index.html",
        "updatedAt": "2025-10-31T11:32:55.128Z"
      },
      "en": {
        "title": "Cache Optimization with Kinetica",
        "summary": "Kinetica allows organisations to process and analyse massive volumes of live data at high speed by harnessing GPUs instead of relying solely on conventional CPUs. It targets complex OLAPstyle analytics workloads, including streaming data, geospatial functions‚Ä¶",
        "source": "Arkemis_Kinetica_en.md",
        "output": "blog/en/kinetica-cache-optimization/index.html",
        "updatedAt": "2025-10-31T10:27:50.784Z"
      }
    }
  },
  {
    "slug": "docker-container-fundamentals",
    "updatedAt": "2025-10-31T14:11:08.630Z",
    "publishedAt": "2025-10-15T00:00:00.000Z",
    "readTime": 15,
    "icon": "üê≥",
    "category": "Docker",
    "categoryLabels": {
      "it": "Docker",
      "en": "Docker"
    },
    "languages": {
      "it": {
        "title": "Docker: Basics",
        "summary": "Cos'√® Docker e perch√© esiste Abstract Questo articolo non √® altro che il primo di una serie di articoli in cui voglio spiegare perch√© i container sono cos√¨ importanti. In questa serie, l'obiettivo √® spiegare in modo chiaro (ma tecnicamente accurato) il motivo‚Ä¶",
        "source": "Docker_01.md",
        "output": "blog/it/docker-container-fundamentals/index.html",
        "updatedAt": "2025-10-31T14:11:08.630Z"
      },
      "en": {
        "title": "Docker Basics",
        "summary": "What Docker Is And Why It Exists Note: this article kicks off the container series (proposed title: ‚ÄúDocker Without Secrets‚Äù rather than the generic ‚ÄúDocker for Developers‚Äù). The goal is to explain, in clear yet technically precise terms, why Docker was born,‚Ä¶",
        "source": "Docker_01_en.md",
        "output": "blog/en/docker-container-fundamentals/index.html",
        "updatedAt": "2025-10-31T10:45:19.679Z"
      }
    }
  }
]
